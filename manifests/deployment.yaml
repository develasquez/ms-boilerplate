apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  name: "ms-boilerplate"
  labels:
    app: "ms-boilerplate"
spec:
  replicas: 1 # from-param: ${deploy_replicas}
  selector:
    matchLabels:
      app: "ms-boilerplate"
  template:
    metadata:
      labels:
        app: "ms-boilerplate"
    spec:
      containers:
      - name: "ms-boilerplate"
        image: container-image
        ports:
          - containerPort: 8080
            name: http
            protocol: TCP
        envFrom:
        - configMapRef:
            name: ms-boilerplate-config
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 60
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 60

#      - name: esp
#        image: gcr.io/endpoints-release/endpoints-runtime:2
#        args: [
#          "--listener_port=8081",
#          "--backend=127.0.0.1:8080",
#          "--service=$(SERVICE_NAME).endpoints.$(PROJECT_ID).cloud.goog",
#          "--cors_preset=basic",
#          "--cors_allow_headers=DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,Access-Control-Allow-Origin,Accept",
#          "--rollout_strategy=managed",
#          "--healthz=/healthz",
#        ]
#        resources:
#          limits:
#            cpu: 250m
#            memory: 500Mi
#          requests:
#            cpu: 250m
#            memory: 500Mi
#        envFrom:
#        - configMapRef:
#            name: ms-boilerplate-config
#        readinessProbe:
#          httpGet:
#            path: /healthz
#            port: 8081
#          initialDelaySeconds: 30
#          periodSeconds: 60     
      
      serviceAccountName: "" # from-param: ${sa_name}
      terminationGracePeriodSeconds: 60
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: ms-boilerplate-svc
  name: ms-boilerplate-svc
  annotations:
    #cloud.google.com/backend-config: '{"ports": {"80":"ms-boilerplate-backend-config-esp"}}'
    cloud.google.com/neg: '{"ingress": true}'
spec:
  selector:
    app: ms-boilerplate  
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8080 #8081
  type: NodePort
